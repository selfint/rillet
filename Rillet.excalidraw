{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "type": "text",
      "version": 79,
      "versionNonce": 991608657,
      "isDeleted": false,
      "id": "JGK7-RewPEosC7jFxczbR",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 449.5318626024665,
      "y": -61.24873544014446,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 92,
      "height": 45,
      "seed": 72718543,
      "groupIds": [
        "UkTlGIrCz_V7vRT3Q5jAf"
      ],
      "roundness": null,
      "boundElements": [],
      "updated": 1671813854157,
      "link": null,
      "locked": false,
      "fontSize": 36,
      "fontFamily": 1,
      "text": "Rillet",
      "baseline": 32,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Rillet"
    },
    {
      "type": "text",
      "version": 195,
      "versionNonce": 678451775,
      "isDeleted": false,
      "id": "sraAJvLRLv-g1EgEk_Oh8",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 454.2740501024665,
      "y": -8.914991040487081,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 331,
      "height": 60,
      "seed": 1246851713,
      "groupIds": [
        "UkTlGIrCz_V7vRT3Q5jAf"
      ],
      "roundness": null,
      "boundElements": [],
      "updated": 1671813854157,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 1,
      "text": "A small, simple stream processing solution.\n- Based on Unix pipes\n- Stateless.",
      "baseline": 54,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "A small, simple stream processing solution.\n- Based on Unix pipes\n- Stateless."
    },
    {
      "id": "KMgA1lH82EKE8D76UCkW-",
      "type": "text",
      "x": -221.50308547379058,
      "y": 160.65916006552263,
      "width": 418,
      "height": 35,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [
        "U1HnqkiY_Qv1l6UeroUvc"
      ],
      "roundness": null,
      "seed": 2014365631,
      "version": 124,
      "versionNonce": 1377050609,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1671813847768,
      "link": null,
      "locked": false,
      "text": "Rillet component (A.K.A pebble)",
      "fontSize": 28,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 25,
      "containerId": null,
      "originalText": "Rillet component (A.K.A pebble)"
    },
    {
      "id": "jSR2eMRg6g-tuH7wfu67W",
      "type": "text",
      "x": -217.19394956428613,
      "y": 216.1232764335679,
      "width": 532,
      "height": 280,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [
        "U1HnqkiY_Qv1l6UeroUvc"
      ],
      "roundness": null,
      "seed": 23406239,
      "version": 731,
      "versionNonce": 548590495,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1671813847768,
      "link": null,
      "locked": false,
      "text": "Each pebble expects:\n- Events coming in from stdin\n- 2 arguemnts\n    1. get-state: a command that returns the state of the pebble\n    2. update-state: a command that receives the state\n                      of the pebble and saves it somewhere\n\nEach pebble will write output events to stdout.\n\nOf course, 'sources' and 'sinks' are a bit different.\nSources don't expect messages from stdin.\nSinks don't write messages to stdout.\n\n*Unless the source/sink is stdin/stdout.",
      "fontSize": 16,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 274,
      "containerId": null,
      "originalText": "Each pebble expects:\n- Events coming in from stdin\n- 2 arguemnts\n    1. get-state: a command that returns the state of the pebble\n    2. update-state: a command that receives the state\n                      of the pebble and saves it somewhere\n\nEach pebble will write output events to stdout.\n\nOf course, 'sources' and 'sinks' are a bit different.\nSources don't expect messages from stdin.\nSinks don't write messages to stdout.\n\n*Unless the source/sink is stdin/stdout."
    },
    {
      "id": "muAS3F7Tet2G2994iSltb",
      "type": "text",
      "x": 424.98793431389606,
      "y": 183.5250228150721,
      "width": 436,
      "height": 35,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 608667487,
      "version": 102,
      "versionNonce": 1909592831,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1671814159109,
      "link": null,
      "locked": false,
      "text": "Distributed word count example",
      "fontSize": 28,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 25,
      "containerId": null,
      "originalText": "Distributed word count example"
    },
    {
      "type": "text",
      "version": 879,
      "versionNonce": 1514922097,
      "isDeleted": false,
      "id": "RvIF6b4YOjhPuWvSniQae",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 425.1486861764687,
      "y": 238.24395777816218,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 343,
      "height": 50,
      "seed": 1989929649,
      "groupIds": [
        "833XPE7MFidx4dbqRxhDb"
      ],
      "roundness": null,
      "boundElements": null,
      "updated": 1671814159110,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Goal: receive sentences from input\n      write the word count output",
      "baseline": 43,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Goal: receive sentences from input\n      write the word count output"
    },
    {
      "type": "text",
      "version": 992,
      "versionNonce": 1802004223,
      "isDeleted": false,
      "id": "v9165sLvzqWbx3emT1t2L",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 426.4282738151609,
      "y": 312.59969284343555,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 321,
      "height": 35,
      "seed": 145559361,
      "groupIds": [
        "-xNnDjTylHvIoIvU-4pcB"
      ],
      "roundness": null,
      "boundElements": [],
      "updated": 1671814166327,
      "link": null,
      "locked": false,
      "fontSize": 28,
      "fontFamily": 1,
      "text": "Kafa + Redis approach",
      "baseline": 25,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Kafa + Redis approach"
    },
    {
      "type": "text",
      "version": 2625,
      "versionNonce": 873445823,
      "isDeleted": false,
      "id": "6ec-J24GzHiPVr1m0L0x1",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 427.6872071037934,
      "y": 485.4154623372225,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 539,
      "height": 240,
      "seed": 2141004289,
      "groupIds": [
        "-xNnDjTylHvIoIvU-4pcB"
      ],
      "roundness": null,
      "boundElements": [],
      "updated": 1671814161128,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 1,
      "text": "1. Counters (many consumers):\n    1. STATE: none\n    2. INPUT: sentences from 'sentences' topic\n    3. LOGIC: counts words in each sentence\n    4. OUTPUT: word count to 'sentences-word-count' topic\n2. Summer (single consumer)\n    1. STATE: total count from 'summer-state' redis key\n    2. INPUT: word counts from 'sentences-word-count' topic\n    3. LOGIC:\n        1. Adds given word count to total word count\n        2. Writes new total word count to 'summer-state' redis key\n        3. Sends total word count to 'word-count' topic",
      "baseline": 234,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "1. Counters (many consumers):\n    1. STATE: none\n    2. INPUT: sentences from 'sentences' topic\n    3. LOGIC: counts words in each sentence\n    4. OUTPUT: word count to 'sentences-word-count' topic\n2. Summer (single consumer)\n    1. STATE: total count from 'summer-state' redis key\n    2. INPUT: word counts from 'sentences-word-count' topic\n    3. LOGIC:\n        1. Adds given word count to total word count\n        2. Writes new total word count to 'summer-state' redis key\n        3. Sends total word count to 'word-count' topic"
    },
    {
      "type": "text",
      "version": 392,
      "versionNonce": 556860849,
      "isDeleted": false,
      "id": "B2UsefxX5La0qUs4PWkIX",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 432.30240984194154,
      "y": 752.4019479453459,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 58,
      "height": 25,
      "seed": 1252474113,
      "groupIds": [
        "-xNnDjTylHvIoIvU-4pcB"
      ],
      "roundness": null,
      "boundElements": [],
      "updated": 1671814161128,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Notes",
      "baseline": 18,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Notes"
    },
    {
      "type": "text",
      "version": 1663,
      "versionNonce": 177220063,
      "isDeleted": false,
      "id": "mYMz2anPKGEGoxRvf3d5e",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 430.8194161887833,
      "y": 791.2181230158079,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 622,
      "height": 280,
      "seed": 2110613857,
      "groupIds": [
        "-xNnDjTylHvIoIvU-4pcB"
      ],
      "roundness": null,
      "boundElements": [],
      "updated": 1671814161128,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 1,
      "text": "1. There is no 'state' in RAM ever.\n2. The single consumer (summer) isn't a bottleneck. It can't be more than\n    one machine ever. If we do try to run the summation in parallel, each\n    process will need to 'lock' the sum, update it, then 'free' the lock.\n    Notice that 100% of the processing occurs between the 'lock' and the\n    'free'. This means all the other processes are doing 0 compute while\n    the working process is update the sum.\n3. Fault tolerance\n    1. Counter crashes - We lose the count for that sentence.\n    2. Summer crashes - We lose the total count for that sentence.\n    3. Restarting the processes will, continue where we left off and the\n        total word count is still correct, except for the sentence we dropped.\n        \n",
      "baseline": 274,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "1. There is no 'state' in RAM ever.\n2. The single consumer (summer) isn't a bottleneck. It can't be more than\n    one machine ever. If we do try to run the summation in parallel, each\n    process will need to 'lock' the sum, update it, then 'free' the lock.\n    Notice that 100% of the processing occurs between the 'lock' and the\n    'free'. This means all the other processes are doing 0 compute while\n    the working process is update the sum.\n3. Fault tolerance\n    1. Counter crashes - We lose the count for that sentence.\n    2. Summer crashes - We lose the total count for that sentence.\n    3. Restarting the processes will, continue where we left off and the\n        total word count is still correct, except for the sentence we dropped.\n        \n"
    },
    {
      "id": "giKjsixequWke-DVqxjKa",
      "type": "text",
      "x": 425.47046776209606,
      "y": 365.56800950300783,
      "width": 322,
      "height": 75,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [
        "-xNnDjTylHvIoIvU-4pcB"
      ],
      "roundness": null,
      "seed": 388017777,
      "version": 328,
      "versionNonce": 1162291089,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1671814161128,
      "link": null,
      "locked": false,
      "text": "Input: kafka 'sentences' topic\nOutput: kafka 'word-count' topic\nState: redis 'summer-state' key",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 68,
      "containerId": null,
      "originalText": "Input: kafka 'sentences' topic\nOutput: kafka 'word-count' topic\nState: redis 'summer-state' key"
    }
  ],
  "appState": {
    "gridSize": null,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}